{"version":3,"file":"bundle.umd.js","sources":["../plugin/object.class.js","../plugin/index.js"],"sourcesContent":["export default class Cache {\r\n  constructor(params = {}) {\r\n    this.databaseName = params.databaseName || \"cache\";     // 数据库名称\r\n    this.tableName = params.databaseName || \"localStorage\"; // 表名\r\n    this.version = params.version || 1;                     // 版本号\r\n    this.memory = params.memory === false ? false : true;   // 是否启用内存接管\r\n    this.db = null;                                         // 数据库对象\r\n    this.source = {}                                        // 源数据=》内存\r\n    this.init();\r\n  }\r\n\r\n  // 源数据内存接管\r\n  setSource(key, value) {\r\n    if (this.source && this.memory) {\r\n      this.source[key] = value;\r\n    } else {\r\n      this.source = {}\r\n    }\r\n  }\r\n\r\n  // 初始化\r\n  async init() {\r\n    try {\r\n      this.db = await this.open();\r\n      this.memory && this.readAll();\r\n      console.log(`loaded cache，version ${this.version}`);\r\n    } catch (e) {\r\n      this.error(e);\r\n    }\r\n  }\r\n\r\n  // 创建数据库\r\n  create(db) {\r\n    db.createObjectStore(this.tableName, { keyPath: \"key\" });\r\n    console.log(`loaded cache create ${this.tableName}`);\r\n  }\r\n\r\n  // 打开数据库\r\n  open() {\r\n    return new Promise((resolve, reject) => {\r\n      if (this.db) {\r\n        resolve(this.db);\r\n      } else {\r\n        const { databaseName, version } = this;\r\n        let request = window.indexedDB.open(databaseName, version);\r\n        // 打开数据库失败\r\n        request.onerror = (e) => reject(e);\r\n        // 打开数据库成功\r\n        request.onsuccess = (e) => resolve(e.target.result);\r\n        // 数据库升级事件\r\n        request.onupgradeneeded = (e) => this.create(e.target.result);\r\n      }\r\n    });\r\n  }\r\n\r\n  // 异常\r\n  error(e) {\r\n    console.log(new Error(e));\r\n  }\r\n\r\n  // 设置数据\r\n  async set(key, value) {\r\n    try {\r\n      let res = await this.get(key);\r\n      if (res) {\r\n        return this.update(key, value);\r\n      } else {\r\n        return this.add(key, value);\r\n      }\r\n    } catch (e) {\r\n      this.error(e);\r\n      return Promise.reject(e);\r\n    }\r\n  }\r\n  async syncSet(key, value) {\r\n    const res = await this.set(key, value);\r\n    return res;\r\n  }\r\n\r\n  // 新增\r\n  async add(key, value) {\r\n    this.db = await this.open();\r\n    return new Promise((resolve, reject) => {\r\n      let request = this.handler(\"readwrite\").add({ key, value });\r\n      request.onsuccess = (e) => {\r\n        this.source[key] = value;\r\n        resolve(e)\r\n      };\r\n      request.onerror = (e) => reject(e);\r\n    });\r\n  }\r\n  // 更新数据\r\n  async update(key, value) {\r\n    this.db = await this.open();\r\n    return new Promise((resolve, reject) => {\r\n      let request = this.handler(\"readwrite\").put({ key, value });\r\n      request.onsuccess = (e) => {\r\n        this.source[key] = value;\r\n        resolve(e)\r\n      };\r\n      request.onerror = (e) => reject(e);\r\n    });\r\n  }\r\n\r\n  // 返回数据\r\n  async get(key) {\r\n    this.db = await this.open();\r\n    const value = this.syncGet(key);\r\n    if (value) {\r\n      return Promise.resolve(value);\r\n    } else {\r\n      return new Promise((resolve, reject) => {\r\n        let request = this.handler(\"readonly\").get(key);\r\n        request.onsuccess = (e) => resolve(e.target.result);\r\n        request.onerror = (e) => reject(e);\r\n      });\r\n    }\r\n  }\r\n  syncGet(key) {\r\n    return this.source[key] === undefined ? null : this.source[key];\r\n  }\r\n\r\n  // 删除数据\r\n  async del(key) {\r\n    try {\r\n      let res = await this.get(key);\r\n      if (res) {\r\n        return new Promise((resolve, reject) => {\r\n          let request = this.handler(\"readwrite\").delete(key);\r\n          request.onsuccess = (e) => {\r\n            delete this.source[key];\r\n            resolve(e)\r\n          };\r\n          request.onerror = (e) => reject(e);\r\n        });\r\n      } else {\r\n        return Promise.resolve();\r\n      }\r\n    } catch (e) {\r\n      this.error(e);\r\n      return Promise.reject(e);\r\n    }\r\n  }\r\n  async syncDel(key) {\r\n    const res = await this.del(key);\r\n    return res;\r\n  }\r\n\r\n  // 清空数据\r\n  clear() {\r\n    return new Promise((resolve, reject) => {\r\n      const { databaseName } = this;\r\n      let request = window.indexedDB.deleteDatabase(databaseName);\r\n      request.onsuccess = (e) => {\r\n        this.source = null;\r\n        resolve(e)\r\n      };\r\n      request.onerror = (e) => reject(e);\r\n    });\r\n  }\r\n  async syncClear() {\r\n    const res = await this.clear();\r\n    return res;\r\n  }\r\n\r\n  // 操作\r\n  handler(mode = \"readonly\") {\r\n    const { tableName } = this;\r\n    return this.db.transaction([tableName], mode).objectStore(tableName);\r\n  }\r\n\r\n  // 遍历数据\r\n  async readAll() {\r\n    this.db = await this.open();\r\n    let source = {};\r\n    return new Promise(resolve => {\r\n      let request = this.handler();\r\n      request.openCursor().onsuccess = (e) => {\r\n        const cursor = e.target.result;\r\n        if (cursor) {\r\n          source[cursor.key] = cursor.value.value\r\n          this.setSource(cursor.key, cursor.value.value);\r\n          cursor.continue();\r\n        } else {\r\n          console.log(\"数据遍历完毕\");\r\n          resolve(source);\r\n        }\r\n      }\r\n    })\r\n  }\r\n}\r\n","export { default as Cache} from \"./object.class\";\r\nimport Cache from \"./object.class\";\r\n\r\nexport const createCache = function(params = {}){\r\n  const cache = new Cache(params);\r\n  return cache;\r\n};\r\n\r\nexport const install = function(app, params = {}){\r\n  const cache = createCache(params);\r\n  app.prototype && (app.prototype.$cache = cache);\r\n  app.config && (app.config.globalProperties = cache);\r\n};\r\n"],"names":["Cache","constructor","params","databaseName","tableName","version","memory","db","source","init","setSource","key","value","open","readAll","console","log","e","error","create","createObjectStore","keyPath","Promise","resolve","reject","request","window","indexedDB","onerror","onsuccess","target","result","onupgradeneeded","Error","set","res","get","update","add","syncSet","handler","put","syncGet","undefined","del","delete","syncDel","clear","deleteDatabase","syncClear","mode","transaction","objectStore","openCursor","cursor","continue","createCache","cache","install","app","prototype","$cache","config","globalProperties"],"mappings":"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"}